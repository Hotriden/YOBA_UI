{"version":3,"sources":["listItems.js","Chart.js","Deposits.js","Orders.js","Dashboard.js","Autentification/JWT/Post.js","App.js","serviceWorker.js","Autentification/JWT/Home.js","Autentification/JWT/Login.js","Autentification/JWT/Protected.js","Autentification/JWT/AutentificateComponent.js","Autentification/JWT/jwt.js","Autentification/JWT/test.js","index.js"],"names":["ListSubheader","ListItem","ListItemIcon","ListItemText","createData","time","amount","undefined","makeStyles","depositContext","flex","id","date","name","shipTo","paymentMethod","theme","seeMore","marginTop","spacing","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Post","state","warehouseName","address","onTitleChange","e","setState","target","value","onBodyChange","handleSubmit","preventDefault","data","axios","post","then","res","console","log","catch","err","className","onSubmit","this","placeholder","onChange","required","type","Component","App","Boolean","window","location","hostname","match","Home","Login","props","wareHouseName","change","bind","submit","localStorage","setItem","email","password","Protected","AutentificateComponent","user","jwt","getItem","history","push","get","headers","Authorization","removeItem","children","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3429dba4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport EventSeatIcon from '@material-ui/icons/EventSeat';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport HouseIcon from '@material-ui/icons/House';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\n\r\nexport const supplyListItems = (\r\n  <div>\r\n    <ListSubheader inset>Supply</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <HouseIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"WareHouses\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LocalShippingIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Suppliers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <SortIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Receipts\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const salesListItems = (\r\n  <div>\r\n    <ListSubheader inset>Sales</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <CallIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Orders\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Customers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Shipments\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const financeListItems = (\r\n  <div>\r\n    <ListSubheader inset>Finances</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AttachMoneyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Incomes\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <MoneyOffIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Expences\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <MoneyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Payments\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const staffListItems = (\r\n  <div>\r\n    <ListSubheader inset>Staff</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DeviceHubIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Branches\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <EmojiPeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Employees\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <EventSeatIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Positions\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\nconst data = [\r\n  createData('00:00', 0),\r\n  createData('03:00', 300),\r\n  createData('06:00', 600),\r\n  createData('09:00', 800),\r\n  createData('12:00', 1500),\r\n  createData('15:00', 2000),\r\n  createData('18:00', 2400),\r\n  createData('21:00', 2400),\r\n  createData('24:00', undefined),\r\n];\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Sales ($)\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport GetWareHouses from './Hooks/GetWareHouses';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Deposits</Title>\r\n      <Typography variant=\"h4\">\r\n        <GetWareHouses/>\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on 15 March, 2019\r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          View balance\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\r\n  return { id, date, name, shipTo, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\r\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\r\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\r\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\r\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Ship To</TableCell>\r\n            <TableCell>Payment Method</TableCell>\r\n            <TableCell align=\"right\">Sale Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.shipTo}</TableCell>\r\n              <TableCell>{row.paymentMethod}</TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more orders\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { supplyListItems, salesListItems, financeListItems, staffListItems } from './listItems';\r\nimport Chart from './Chart';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport ModalBox from './Autentification/LoginModalBox/ModalBox';\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            YOBA - Your own business application\r\n          </Typography>\r\n          <ModalBox/>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{supplyListItems}</List>\r\n        <Divider />\r\n        <List>{salesListItems}</List>\r\n        <Divider />\r\n        <List>{financeListItems}</List>\r\n        <Divider />\r\n        <List>{staffListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Chart />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Created by '}\r\n      <Link color=\"inherit\" href=\"https://github.com/Hotriden/YOBA_UI/tree/master\">\r\n        Rifter\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    warehouseName: \"\",\r\n    address: \"\"\r\n  };\r\n\r\n  onTitleChange = e => {\r\n    this.setState({\r\n        warehouseName: e.target.value\r\n    });\r\n  };\r\n\r\n  onBodyChange = e => {\r\n    this.setState({\r\n        address: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n        warehouseName: this.state.warehouseName,\r\n        address: this.state.address\r\n    };\r\n    axios\r\n      .post(\"http://apiyoba.pp.ua/api/warehouse\", data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"post\">\r\n        <form className=\"post\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            placeholder=\"warehouseName\" value={this.state.warehouseName}\r\n            onChange={this.onTitleChange} required\r\n          />\r\n          <textarea\r\n            placeholder=\"address\" value={this.state.address}\r\n            onChange={this.onBodyChange} required\r\n          />\r\n          <button type=\"submit\">Create Post</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Post from './Autentification/JWT/Post';\r\n\r\nfunction App() {\r\n  return (\r\n    <Post/>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>Hello </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            wareHouseName: '',\r\n            address:  ''\r\n        };\r\n\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    change(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    submit(e){\r\n        e.preventDefault();\r\n        axios.post('http://apiyoba.pp.ua/api/warehouse',  {\r\n            wareHouseName : this.state.wareHouseName,\r\n            address: this.state.address\r\n        }).then(res => localStorage.setItem('cool-jwt', res.data))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={e => this.submit(e)}>\r\n                    <label>email</label><input type=\"text\" name=\"wareHouseName\" onChange={e => this.change(e)} value={this.state.email}></input>\r\n                    <label>password</label><input type=\"text\" name=\"address\" onChange={e=> this.change(e)} value={this.state.password}></input>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Protected = () =>{\r\n    return(\r\n        <h1>I AM PROTECTED</h1>\r\n    );\r\n};\r\n\r\nexport default Protected;","import React, {Component} from 'react';\r\nimport {getJwt} from './jwt';\r\nimport axios from 'axios';\r\n\r\nclass AutentificateComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const jwt = getJwt();\r\n        if(!jwt){\r\n            this.props.history.push('/Login');\r\n        }\r\n\r\n        axios.get('http://apiyoba.pp.ua/api/jwt', {headers: {Authorization: `Bearer ${jwt}`}}).then(res => this.setState({\r\n            user: res.data\r\n        })).catch(err => {\r\n            localStorage.removeItem('cool-jwt');\r\n            this.props.history.push('/Login');\r\n            console.log(jwt);\r\n        });\r\n    }\r\n    render(){\r\n        if(this.state.user == undefined){\r\n            return (\r\n                <div>\r\n                    <h1>Loading...</h1>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutentificateComponent; \r\n","export const getJwt = () => {\r\n    return localStorage.getItem('cool-jwt');\r\n}\r\n","import React, {Component } from 'react';\r\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Protected from './Protected';\r\nimport AutentificateComponent from './AutentificateComponent';\r\n\r\nclass Test extends Component {\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/Login\" component={Login}/>\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <AutentificateComponent>\r\n                        <Route path=\"/Protected\" component={Protected}/>\r\n                    </AutentificateComponent>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Test from './Autentification/JWT/test';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}